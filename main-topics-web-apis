// JSON //

[
    { "WEB-API-REQUEST": "SCHEMA" },
    {
        "https://": "protocol",
        "api.github.com": "host",
        "/URI": "resource",
        "?params=value": "query",
        "&otherParams=values": "multi-query",
        "/:identifier": "path param|variable",
        "{identifier}": "also path param|var"
    }
]

// Response status codes ==
Code range: [
    {
        "2xx": "Request success",
        "200": "OK",
        "201": "Created",
        "204": "No content (silent OK)"
    },
    {
        "3xx": "Redirection",
        "301": "Moved (path changed)"
    },
    {
        "4xx": "Client error",
        "400": "Bad request",
        "401": "Unauthorized",
        "403": "Not permitted",
        "404": "Not found"
    },
    {
        "5xx": "Server error",
        "500": "Internal server error",
        "502": "Bad gateway",
        "504": "Gateway timeout"
    }
]

// Request methods === `REST 'VERBs'`
[
    {
        "POST": "Send data (CREATE) *Execute",
        "GET": "Retrieve data (READ) *Query",
        "PUT|PATCH": "Update data (UPDATE) *Replaces",
        "DELETE": "Delete data (DELETE) *Remove"
    }
]

//RESTful principle patterns !==
{"RESTful": "software architectural 'constraints'"},
{
    "Client-server": "communication",
    "Stateless": "communication",
    "Caching": "capable",
    "Uniform-interface": [
        "Identification": "of-resources",
        "Manipulation": "of-resources-through-representations",
        "Self-decriptive": "messages",
        "Hypermedia": "as-the-engine-of-application-state(HATEOAS)"
],
    "Layered": "system",
    "Code": "on-demand"
}

// for (const coding in Postman) {
[
    {"Code": "Scripts, Snippets & Boilerplate"},
    {
        "pre-request": "before request",
        "tests": "after response",
        "code-gen": {
            "automated": "snnipets"
        },
        "var-automation": [
            "pm object",
            "request property",
            "response property",
            ".json() method"
        ]
    }
]

// while (!apisRulz) {
[
    "APIs", ["Client", "App", "Terminal", "Extension", "Plugin"],
    {
        "Postman": "Platform, App, Web-Cloud",
        "RESTFox": "Web-agent",
        "Thunder": "IDE-extension",
        "Swagger": "Live(interactive)-documentation",
        "cURL": "Terminal(based)-CLI",
        "Webhooks": "(eventDriven)Redirect-endpoints"
    }
]
